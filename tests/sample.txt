\\ UFRGS - Compiladores - Marcelo Johann - 2021/2

char c: 'x';
char d: 100;
int a: 'A';
int i: 1;
int v[10]: 'a' 0 0 0 0 0 0 0 0 0;
int vdafa[10]: 'a' 0 0 0 0 0 0 0 0 1;
char x[10]: 'a' 53 0 0 0 0 0 0 0 0;
float y[5]: 'a' 0 0 0 'b';
float vetorz[1]: 'a';
int vv[10];
char xx[10];
float yy[10];
int matrix[100]; 
float f: 1/3;

\*
This is a comment 
of multiple lines
*\

int main ()
  {
  a = 0;
  a = a - i;
  a = 5;
  c = 0;
  v[a+c] = 55;
  v[a+c] = a + 1;
  v[a+c] = 55;
  print v[5];
  print "TESTE";
  print a;
  i = 2;
  rot:
  i = vazio();
  print i;
  i = incdois(incn(1, i, i));
  print i;
  print "Digite um numero: \n";
  a = read;
  print a;

  print "TESTE";
  a = i + x[(i+5)*4/a - i*(i+(i+(i+5)))+9] + (read * incdois(i));

  print "INCDOIS";
  print incdois(5);
  print "A:";
  print a;
  print "TESTE";
  print "contao:", contao(5,10);

  a = (a - 5) / 3;
  print a;

  {;};

  {};

  ;

  while i<10
    {
      print i;
      c = incn(a,1, 4);
      a = incdois(a);
      i = i + 1;
    };
  a = 15;
  print "Incrementado algumas vezes a fica " , a ,"\n";
  print "Incrementado algumas vezes i fica " , i ,"\n";
  i = 100;
  if a==15 then
    {
    label-x:
    a = a + 1;
    print "A era=15\n";
    };
    
  if (i!=100) then
    {
    print "Nao tem como isso...\n";
    }
  else
    print "OK!\n";
  if a <= 0 then
    goto label-x;

  return 0;
  }

float incdois (int xvarson) 
  {
  return xvarson+2;
  }

float contao(int argsum , int argsdois){
  return argsum - argsdois;
}

char nopar() return 0

int vazio()

int printfoo() print 1

int attrvar() a = 5

int attrvec() yy[2] = 3

int controlif()
  if a >= 2 then 
    return 0

int controlifelse() 
  if a > 2 then 
    return 0
  else
    return 1

int controlwhile(){
  while i < 5 
    print "teste";
}

int controlgoto(){
  rotb:
    goto rotb;
}

int sorot(){
  rotc:
}

int teste[100]; 

int incn (int xvar , char n, float identifier )
  {
    label-xb:
  xvar = n + identifier;
  xvar = n + xvar;
  xvar = xvar+identifier;

  xvar = n;
  xvar = xvar;
  xvar = identifier;

  n = n;
  n = xvar;
  n = identifier;

  identifier = n;
  identifier = xvar;
  identifier = identifier;

  return xvar+identifier;
  }

\\ end of file
  


